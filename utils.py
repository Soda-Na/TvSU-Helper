from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types          import InlineKeyboardMarkup, InlineKeyboardButton

def back_button_markup(callback_data: str) -> InlineKeyboardMarkup:
    buttons = InlineKeyboardBuilder()
    buttons.button(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data=callback_data
    )
    buttons.adjust(1)
    return buttons.as_markup()

def back_button(callback_data: str) -> InlineKeyboardButton:
    return InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data=callback_data
    )

translit_dict = {
    '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'jo', 
    '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'jj', '–∫': 'k', '–ª': 'l', '–º': 'm', 
    '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u', 
    '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'c', '—á': 'ch', '—à': 'sh', '—â': 'shh', '—ä': 'q', 
    '—ã': 'y', '—å': 'x', '—ç': 'je', '—é': 'yu', '—è': 'ya',
    
    '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'Jo', 
    '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'Jj', '–ö': 'K', '–õ': 'L', '–ú': 'M', 
    '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U', 
    '–§': 'F', '–•': 'Kh', '–¶': 'C', '–ß': 'Ch', '–®': 'Sh', '–©': 'Shh', 
    '–™': 'Q', '–´': 'Y', '–¨': 'X', '–≠': 'Je', '–Æ': 'Yu', '–Ø': 'Ya'
}

reverse_translit_dict = {v: k for k, v in translit_dict.items()}

def encode_rus_to_eng(text):
    result = []
    for char in text:
        result.append(translit_dict.get(char, char))
    return ''.join(result)

def decode_eng_to_rus(text):
    result = []
    i = 0
    while i < len(text):
        for length in (3, 2, 1):  
            chunk = text[i:i + length]
            if chunk in reverse_translit_dict:
                result.append(reverse_translit_dict[chunk])
                i += length
                break
        else:
            result.append(text[i])
            i += 1
    return ''.join(result)
